config {
    Domain string `bor:const(common)`
    Key string `bor:const(ConfigService.uploadAllPointsCfg)`
    Id int `bor:incrByN(10000,1)`
    Value struct {
        PlanName string `bor:toStrf(incrByN(1,1),A%01s)`
        MeasurePoints [5]struct {
            PlanID int `bor:incrByN(2,3)`
            PointName string `bor:toStrf(incrByN(4,5),%03s)`
            TrajId int `bor:rand(0,4)`
            PMode int `bor:const(0)`
            PointId int `bor:incrByN(100,1)`
            Factory string `bor:const(CPA2)`
            Station string `bor:const(3360)`
            TheoreticalX float64 `bor:incrByN(0.2,0.3)`
            TheoreticalY float64 `bor:rand(-100,100)`
            TheoreticalZ float64 `bor:rand(-100,100)`
            I int `bor:rand(0,1)`
            J int `bor:rand(0,1)`
            K int `bor:rand(0,1)`
            MonitorD int `bor:const(1)`
            MonitorX int `bor:const(1)`
            MonitorY int `bor:const(1)`
            MonitorZ int `bor:const(1)`
            PointType int `bor:const(0)`
            RepeatPoint int `bor:const(0)`
            Tol1minusD float64 `bor:rand(0.5,1)`
            Tol1minusX float64 `bor:rand(0.5,1)`
            Tol1minusY float64 `bor:rand(-1,-0.5)`
            Tol1minusZ float64 `bor:rand(1.5,2)`
            Tol1plusD float64 `bor:rand(0.5,1)`
            Tol1plusX float64 `bor:rand(0.5,1)`
            Tol1plusY float64 `bor:rand(-1,-0.5)`
            Tol1plusZ float64 `bor:rand(1.5,2)`
            Tol2minusD float64 `bor:rand(0.5,1)`
            Tol2minusX float64 `bor:rand(0.5,1)`
            Tol2minusY float64 `bor:rand(-1,-0.5)`
            Tol2minusZ float64 `bor:rand(1.5,2)`
            Tol2plusD float64 `bor:rand(0.5,1)`
            Tol2plusX float64 `bor:rand(0.5,1)`
            Tol2plusY float64 `bor:rand(-1,-0.5)`
            Tol2plusZ float64 `bor:rand(1.5,2)`
            Tol3minusD float64 `bor:rand(0.5,1)`
            Tol3minusX float64 `bor:rand(0.5,1)`
            Tol3minusY float64 `bor:rand(-1,-0.5)`
            Tol3minusZ float64 `bor:rand(1.5,2)`
            Tol3plusD float64 `bor:rand(0.5,1)`
            Tol3plusX float64 `bor:rand(0.5,1)`
            Tol3plusY float64 `bor:rand(-1,-0.5)`
            Tol3plusZ float64 `bor:rand(1.5,2)`
            OffsetX float64 `bor:rand(0.5,1)`
            OffsetY float64 `bor:rand(-1,-0.5)`
            OffsetZ float64 `bor:rand(1.5,2)`
            P0 int `bor:rand(1,10)`
            P1 int `bor:rand(1,10)`
            P2 int `bor:rand(1,10)`
            P3 int `bor:rand(1,10)`
            P4 int `bor:rand(1,10)`
            P5 int `bor:rand(1,10)`
            P6 int `bor:rand(1,10)`
            P7 int `bor:rand(1,10)`
            P8 int `bor:rand(1,10)`
            P9 int `bor:rand(1,10)`
            P10 int `bor:rand(1,10)`
        }
    }
}